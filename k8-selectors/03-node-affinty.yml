apiVersion: v1
kind: Pod
metadata:
  name: with-node-affinity
spec:
  affinity:
    nodeAffinity:
      # Hard requirement - pod won't be scheduled unless this condition is met
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:  # List of terms, any of which can match for the pod to be scheduled
        - matchExpressions:  
          - key: vs  
            operator: In 
            values:  
            - vicky 
      # Soft preferences - pod will still be scheduled even if these aren't met
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1  # Weight determines priority when multiple preferences exist (higher = more important)
        preference:
          matchExpressions:
          - key: vs
            operator: In
            values:
            - vicky  # Prefer nodes with label vs=vicky
      - weight: 2  # This preference has higher priority than the one with weight 1
        preference:
          matchExpressions:
          - key: v
            operator: In
            values:
            - vs  # Prefer nodes with label v=vs
        # if no perfences matche sthen it goes to the random nodes but defint it will alloacte
  containers:  
  - name: with-node-affinity  
    image: nginx 

# you can use both soft and hard rules together in nodeAffinity.

# Hard rule (requiredDuringSchedulingIgnoredDuringExecution) → pod must run on nodes that match the condition, otherwise it stays Pending.

# Soft rule (preferredDuringSchedulingIgnoredDuringExecution) → pod prefers certain nodes, but if none match, it can still run elsewhere.

# Example:

# Hard rule → pod must run on nodes with hardware=gpu.

# Soft rule → pod prefers nodes with zone=us-east-1a, but if not available, it can go to another zone.

# Kubernetes will first satisfy the hard rule, then try to satisfy the soft preferences.